#! /bin/bash
set -x
user="brody"
netShareEnable=0
home="/home/${user}"
rootMount="/mnt/home"
tmpmnt="${home}/tmpmnt"
uid="uid=$(id -u brody)"
gid="gid=$(id -g brody)"
fileMask="umask=002" #umask
ntfsOps="-o noatime,suid,exec,${uid},${gid},${fileMask},rw,permissions"
storageUrl='//192.168.2.60/storage/' 
raid0Url='//192.168.2.60/raid0/' 
mountStorage="mount -t cifs -o user=brody,pass=dyck,dom=SWOMP,uid=${user},vers=3.0 ${filesUrl}"
Storage=${home}/storage
mountRaid0="mount -t cifs -o user=brody,pass=dyck,dom=SWOMP,uid=${user},vers=3.0 ${raid1Url}"
Raid0=${home}/raid0
netSetupDir="${tmpmnt}/projects/setup-stuff"
localSetupDir="${home}/Projects/setup-stuff"
#for my setups, will always be last partition
dataPart="/dev/sda$(lsblk -px SIZE | grep -Ec -e "/dev/sda[1-9]")"


#Making some necessary directories
makeDirs(){
        mkdir ${rootMount}
        mkdir ${home}/Emulation
	mkdir ${home}/Installers
	mkdir ${home}/Projects
	mkdir ${home}/storage
	mkdir ${home}/raid0
}

#Changing ownership of those things
ownEverything(){
    chown -R brody:brody ${home}
    chmod -R 700 ${home}/.ssh
}

#Copying some config files over
copyStuff(){
    tmpMount enable
#    if hostname -I | grep -q 192.168.2.100 && [[ "${netShareEnable}" = 1 ]] ; then
#	netShare enable
#	copyStuff;
    #    fi
    cp ${localSetupDir}/modload-passthrough.conf /etc/modules-load.d/modload-passthrough.conf.uhhh
    cp ${localSetupDir}/modprobe-passthrough.conf /etc/modprobe.d/modprobe-passthrough.conf.uuuh
    cp -p ${localSetupDir}/home-stuff/* /home/${user}/
    cp -p ${localSetupDir}/roothome-stuff/* /root/
}

bootScript(){
    cp ${localSetupDir}/mount-home /etc/init.d/mount-home
    service "enable mount-home"
}

grubUpdate(){
    cp ${localSetupDir}/grub.default /etc/default/grub
    grub-update
}

#Getting some info
#findDataPart(){
#
#}

#temp mounting data partition
tmpMount(){

case "$1" in
    enable)
	umount ${dataPart}
     	mkdir -p ${tmpmnt}
	mount -t ntfs-3g ${dataPart} ${ntfsOps} ${tmpmnt}
	;;
    disable)
	umount ${dataPart}
	rm -rf ${tmpmnt}
	;;
esac
}
#Mounting network share
netShare(){
case "$1" in
     enable)
     	mkdir ${Storage}
	mkdir ${Raid0}
	${mountStorage} ${Storage}
	${mountRaid0} ${Raid0}
	;;
     disable)
	umount ${Storage}
	umount ${Raid0}
	;;
esac
}
#wgetRepo(){
#if [ ! -f "${5}" ]; then
#wget -q -O - $1 | sudo apt-key add -
#echo 'deb [arch=amd64] $2 $3 $4' | tee $5;
#fi
#}

#Installing software repos
instRepo(){
    addRepo="add-apt-repository -y -n"
    sourcesListd="/etc/apt/sources.list.d"

    if [[ ! -f "${sourcesListd}/google-chrome.list" ]]; then
        wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
        echo 'deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main' | tee google-chrome.list;
    fi
    if [[ ! -f "${sourcesListd}/signal-desktop.list" ]]; then
        wget -q -O - https://updates.signal.org/desktop/apt/keys.asc | apt-key add - 
        echo "deb [arch=amd64] https://updates.signal.org/desktop/apt xenial main" | tee signal-desktop.list;
    fi
#    if [[ ! -f "${sourcesListd}/**lollypop**" ]]; then
#        ${addRepo} ppa:gnumdk/lollypop;
#    fi
    if [[ ! -f "${sourcesListd}/**android-studio**" ]]; then
        ${addRepo} ppa:maarten-fonville/android-studio;
    fi
    if [[ ! -f "${sourcesListd}/**dolphin-emu**" ]]; then
        ${addRepo} ppa:dolphin-emu/ppa;
    fi
    if [[ ! -f "${sourcesListd}/**webupd8**" ]]; then
        ${addRepo} ppa:nilarimogard/webupd8;
    fi
    if [[ ! -f "${sourcesListd}/**peek**" ]]; then
	${addRepo} ppa:peek-developers/stable;
    fi

    apt update
}

kernUpdate(){
    if [[ ! -f "${sourcesListd}/**teejee2008**" ]]; then
        ${addRepo} ppa:teejee2008/ppa;
    fi
    apt update -y
    apt install ukuu -y
    ukuu --install-point --yes
}

instSoftware(){
    apt -y upgrade && apt install \
			  google-chrome-stable \
			  signal-desktop \
			  android-studio \
			  dolphin-emu-master \
			  arduino \
			  bc \
			  btrfs-progs \
			  g++ \
			  gimp \
			  git \
			  htop \
			  scrot \
			  neofetch \
			  ranger \
			  curl \
			  libvirt-bin \
			  virt-manager \
			  virt-viewer \
			  qemu-kvm \
			  ovmf \
			  lm-sensors \
			  libreoffice \
			  vlc \
			  python3 \
			  samba \
			  cifs-utils \
			  unrar \
			  gparted \
			  adb \
			  python3-selenium \
			  emacs26 \
			  gnome-disks \
			  transmission \
			  unrar \
			  rar \
			  7z \
			  xbindkeys \
			  unzip \
			  wireshark \
			  freerdp2-x11 \
	                  xclip \
			  linphone \
			  peek \
			  texlive-latex-base \
			  texlive-latex-extras
	&& wait
#steam \
#rambox \
#synergy \
#lollypop \

    #dpkg -i ${localSetupDir}synergy2.deb
    #dpkg -i ${localSetupDir}rambox.deb
    apt install -f
    #snap install skype --classic
    
			  
}

makeDirs && ownEverything
instRepo
instSoftware
bootScript
kernUpdate
grubUpdate
exit

keybase(){
    if [[ ! -f "${localSetupDir}/**keybase**" ]]; then
	curl -O https://prerelease.keybase.io/keybase_amd64.deb 
	dpkg -i keybase_amd64.deb
	apt install -f;
    fi
}

